#!/bin/sh

# Copyright 2008, 2009, 2010, 2011  Patrick J. Volkerding, Sebeka, MN, USA
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.


PKGNAM=dhcp
# Leave this one .gz as other compressors do not help much and we can keep
# the original upstream .asc
VERSION=${VERSION:-$(basename $(echo $PKGNAM-*.tar.gz | cut -f 2- -d -) .tar.gz)}
BUILD=${BUILD:-1}

PKG_VERSION=$(echo $VERSION | tr - _)

NUMJOBS=${NUMJOBS:-" -j7 "}

# Automatically determine the architecture we're building on:
if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) export ARCH=i486 ;;
    arm*) export ARCH=arm ;;
    # Unless $ARCH is already set, use uname -m for all other archs:
       *) export ARCH=$( uname -m ) ;;
  esac
fi

CWD=$(pwd)
TMP=${TMP:-/tmp}
PKG=$TMP/package-dhcp

if [ "$ARCH" = "i486" ]; then
  SLKCFLAGS="-O2 -march=i486 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "s390" ]; then
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"
  LIBDIRSUFFIX="64"
else
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
fi

rm -rf $PKG
mkdir -p $TMP $PKG

cd $TMP
rm -rf dhcp-$VERSION
tar xvf $CWD/dhcp-$VERSION.tar.gz || exit 1
cd dhcp-$VERSION || exit 1

chown -R root:root .
find . \
  \( -perm 777 -o -perm 775 -o -perm 711 -o -perm 555 -o -perm 511 \) \
  -exec chmod 755 {} \; -o \
  \( -perm 666 -o -perm 664 -o -perm 600 -o -perm 444 -o -perm 440 -o -perm 400 \) \
  -exec chmod 644 {} \;

# Add PATH setting to /sbin/dhclient-script
zcat $CWD/dhclient-script.PATH.diff.gz | patch -p1 || exit 1

CFLAGS="$SLKCFLAGS" \
./configure \
  --prefix=/usr \
  --sysconfdir=/etc \
  --localstatedir=/var \
  --infodir=/usr/info \
  --mandir=/usr/man \
  --libdir=/usr/lib${LIBDIRSUFFIX} \
  --docdir=/usr/doc/dhcp-$VERSION \
  --build=$ARCH-slackware-linux \
  --with-srv-lease-file=/var/state/dhcp/dhcpd.leases \
  --with-srv6-lease-file=/var/state/dhcp/dhcpd6.leases \
  --with-cli-lease-file=/var/state/dhcp/dhclient.leases \
  --with-cli6-lease-file=/var/state/dhcp/dhclient6.leases
# Default pid dir is still /var/run, so no need to declare it

make $NUMJOBS || make || exit 1
make install DESTDIR=$PKG || exit 1

# DHCP libraries need not be included, yet.
rm -rf $PKG/usr/{include,lib${LIBDIRSUFFIX}}

# We need this in /sbin
mkdir -p $PKG/sbin
mv $PKG/usr/sbin/dhclient $PKG/sbin

# Install the dhclient-script for linux
cat client/scripts/linux > $PKG/sbin/dhclient-script
chmod 700 $PKG/sbin/dhclient-script

# Create the initial *.leases files:
mkdir -p $PKG/var/state/dhcp
touch $PKG/var/state/dhcp/dhcpd.leases.new
touch $PKG/var/state/dhcp/dhcpd6.leases.new
touch $PKG/var/state/dhcp/dhclient.leases.new
touch $PKG/var/state/dhcp/dhclient6.leases.new

cat << EOF > $PKG/etc/dhcpd.conf.new
# dhcpd.conf
#
# Configuration file for ISC dhcpd (see 'man dhcpd.conf')
#
EOF

cat << EOF > $PKG/etc/dhclient.conf.new
# dhclient.conf
#
# Configuration file for ISC dhclient (see 'man dhclient.conf')
#
EOF

# Compress and if needed symlink the man pages:
if [ -d $PKG/usr/man ]; then
  ( cd $PKG/usr/man
    for manpagedir in $(find . -type d -name "man*") ; do
      ( cd $manpagedir
        for eachpage in $( find . -type l -maxdepth 1) ; do
          ln -s $( readlink $eachpage ).gz $eachpage.gz
          rm $eachpage
        done
        gzip -9 *.?
      )
    done
  )
fi

find $PKG | xargs file | grep -e "executable" -e "shared object" | grep ELF \
  | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null

mkdir -p $PKG/usr/doc/dhcp-$VERSION/examples
cp -a \
  LICENSE README RELNOTES \
  $PKG/usr/doc/dhcp-$VERSION
mv $PKG/etc/dhcpd.conf $PKG/etc/dhclient.conf \
  $PKG/usr/doc/dhcp-$VERSION/examples

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc
zcat $CWD/doinst.sh.gz > $PKG/install/doinst.sh

cd $PKG
/sbin/makepkg -l y -c n $TMP/dhcp-$PKG_VERSION-$ARCH-$BUILD.txz

