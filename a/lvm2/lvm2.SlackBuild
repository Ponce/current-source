#!/bin/sh

# Copyright 2008, 2009, 2010, 2011  Patrick J. Volkerding, Sebeka, Minnesota, USA
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.


VERSION=$(echo LVM2.*.tar.xz | cut -f 2- -d . | rev | cut -f 3- -d . | cut -f 1 -d - | rev)
BUILD=${BUILD:-1}

NUMJOBS=${NUMJOBS:-" -j7 "}

# Automatically determine the architecture we're building on:
if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) export ARCH=i486 ;;
    arm*) export ARCH=arm ;;
    # Unless $ARCH is already set, use uname -m for all other archs:
       *) export ARCH=$( uname -m ) ;;
  esac
fi

CWD=$(pwd)
TMP=${TMP:-/tmp}
PKG=$TMP/package-lvm2

if [ "$ARCH" = "i486" ]; then
  SLKCFLAGS="-O2 -march=i486 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "s390" ]; then
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"
  LIBDIRSUFFIX="64"
else
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
fi

rm -rf $PKG
mkdir -p $PKG
cd $TMP
rm -rf LVM2.$VERSION
tar xvf $CWD/LVM2.$VERSION.tar.xz || exit 1
cd LVM2.$VERSION || exit 1

chown -R root:root .
find . \
  \( -perm 777 -o -perm 775 -o -perm 711 -o -perm 555 -o -perm 511 \) \
  -exec chmod 755 {} \; -o \
  \( -perm 666 -o -perm 664 -o -perm 600 -o -perm 444 -o -perm 440 -o -perm 400 \) \
  -exec chmod 644 {} \;

# Fix linking of librt until upstream does it correctly :)
zcat $CWD/build_with_udev_165_and_later.diff.gz | patch -p1 --verbose || exit 1

# uid 0 = root
# gid 6 = disk
CFLAGS="$SLKCFLAGS" \
./configure \
  --disable-readline \
  --enable-cmdlib \
  --enable-dmeventd \
  --enable-applib \
  --libdir=/usr/lib${LIBDIRSUFFIX} \
  --with-usrlibdir=/usr/lib${LIBDIRSUFFIX} \
  --mandir=/usr/man \
  --enable-static_link \
  --enable-realtime \
  --with-lvm1=internal \
  --enable-pkgconfig \
  --enable-udev_sync \
  --enable-udev_rules \
  --with-udev-prefix="" \
  --with-device-uid=0 \
  --with-device-gid=6 \
  --with-device-mode=0660 \
  --build=$ARCH-slackware-linux

make $NUMJOBS || make || exit 1
make install DESTDIR=$PKG || exit 1

mv $PKG/etc/lvm/lvm.conf $PKG/etc/lvm/lvm.conf.new

# Create default rundir
mkdir -p $PKG/var/run/lvm

if [ -d $PKG/usr/share/man ]; then # --mandir was ignored
  mv $PKG/usr/share/man $PKG/usr
  rmdir $PKG/usr/share
fi

# Move the binary and shared library to /sbin and /lib{,64}:
mkdir -p $PKG/lib${LIBDIRSUFFIX}
( cd $PKG/usr/lib${LIBDIRSUFFIX}
  for file in lib*.so.?.* ; do
    mv $file ../../lib${LIBDIRSUFFIX}
    ln -sf ../../lib${LIBDIRSUFFIX}/$file .
  done
)

# The Makefile is DIW.
( cd $PKG/usr/lib${LIBDIRSUFFIX}
  find . -name "*.so" -type l | cut -b3- | while read file ; do
    # These two excluded files are in ./device-mapper/ subdir
    if [ "$file" != "libdevmapper-event-lvm2mirror.so" -a "$file" != "libdevmapper-event-lvm2snapshot.so" ]; then
      rm -f $file
      ln -sf $(basename ../../lib${LIBDIRSUFFIX}/${file}.?.*) $file
    fi
  done
)

find $PKG | xargs file | grep -e "executable" -e "shared object" | grep ELF \
  | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null

mkdir -p $PKG/usr/doc/LVM2.$VERSION
cp -a \
  COPYING* INSTALL README* VERSION WHATS_NEW \
  $PKG/usr/doc/LVM2.$VERSION

find $PKG/usr/man -type f -exec gzip -9 {} \;
for i in $( find $PKG/usr/man -type l ) ; do ln -s $( readlink $i ).gz $i.gz ; rm $i ; done

mkdir -p $PKG/install
zcat $CWD/doinst.sh.gz > $PKG/install/doinst.sh
cat $CWD/slack-desc > $PKG/install/slack-desc

cd $PKG
/sbin/makepkg -l y -c n $TMP/lvm2-$VERSION-$ARCH-$BUILD.txz

