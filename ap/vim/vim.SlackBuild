#!/bin/sh

# Copyright 2008, 2009, 2010  Patrick J. Volkerding, Sebeka, Minnesota, USA
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

VIMVER=7.3
CTAGSVER=5.8
# This is the directory in the VIM source archive to cd into.
DIRVER=73
BUILD=${BUILD:-1}

# Automatically determine the architecture we're building on:
if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) export ARCH=i486 ;;
    arm*) export ARCH=arm ;;
    # Unless $ARCH is already set, use uname -m for all other archs:
       *) export ARCH=$( uname -m ) ;;
  esac
fi

NUMJOBS=${NUMJOBS:-" -j7 "}

PYVER=$(python -V 2>&1 | cut -f 2 -d' ' | cut -f 1-2 -d.)

if [ "$ARCH" = "x86_64" ]; then
  export SLKCFLAGS="-O2 -fPIC"
  export LIBDIRSUFFIX="64"
else
  export SLKCFLAGS="-O2"
  export LIBDIRSUFFIX=""
fi
export SLKLDFLAGS="-L/usr/lib${LIBDIRSUFFIX}"

CWD=$(pwd)
TMP=${TMP:-/tmp}
PKG=$TMP/package-vim

rm -rf $PKG
mkdir -p $TMP $PKG

# Determine VIM patchlevel:
if [ -d $CWD/patches ] ; then
  cd $CWD/patches
  PATCHLEVEL=$(/bin/ls 2> /dev/null | tail -1 | cut -f 3 -d . )
    if [ "$PATCHLEVEL" = "" ]; then
      PATCHLEVEL=000
    fi
  cd $CWD
fi

# ctags was once a part of vim,
# but now we have to bundle it in
cd $TMP
rm -rf ctags-$CTAGSVER
tar xvf $CWD/ctags-$CTAGSVER.tar.gz || exit 1
cd ctags-$CTAGSVER
chown -R root:root .
find . \
  \( -perm 777 -o -perm 775 -o -perm 711 -o -perm 555 -o -perm 511 \) \
  -exec chmod 755 {} \; -o \
  \( -perm 666 -o -perm 664 -o -perm 600 -o -perm 444 -o -perm 440 -o -perm 400 \) \
  -exec chmod 644 {} \;
CFLAGS="$SLKCFLAGS" LDFLAGS="$SLKLDFLAGS" \
./configure \
  --prefix=/usr \
  --build=$ARCH-slackware-linux
make $NUMJOBS || make || exit 1
mkdir -p $PKG/usr/bin
cat ctags > $PKG/usr/bin/ctags
chmod 755 $PKG/usr/bin/ctags
mkdir -p $PKG/usr/man/man1
cat ctags.1 | gzip -9c > $PKG/usr/man/man1/ctags.1.gz
mkdir -p $PKG/usr/doc/ctags-$CTAGSVER
cp -a \
  COPYING EXTENDING.html FAQ INSTALL INSTALL.oth NEWS README \
  $PKG/usr/doc/ctags-$CTAGSVER
chmod 644 $PKG/usr/doc/ctags-$CTAGSVER/*

cd $TMP
rm -rf vim$DIRVER
tar xvf $CWD/vim-$VIMVER.tar.?z* || exit 1

config_vim() {
CFLAGS="$SLKCFLAGS" \
./configure \
  $* \
  --prefix=/usr \
  --enable-pythoninterp \
  --with-python-config-dir=/usr/lib${LIBDIRSUFFIX}/python$PYVER/config \
  --enable-perlinterp \
  --disable-tclinterp \
  --enable-multibyte \
  --enable-cscope \
  --with-features=huge \
  --with-compiledby="<volkerdi@slackware.com>" \
  --build=$ARCH-slackware-linux

  # I had been adding this, but got 100% complaints and 0% kudos:
  #  --enable-rubyinterp
}

cd $TMP/vim$DIRVER

# If there's no syntax update, create one:
if ! ls $CWD/vim-runtime-syntax-* 1> /dev/null 2> /dev/null ; then
  rm -rf runtime/syntax.orig
  cp -a runtime/syntax runtime/syntax.orig
  echo "Fetching vim syntax updates from ftp.nluug.nl..."
  rsync -avzcP ftp.nluug.nl::Vim/runtime/syntax/ runtime/syntax/
  diff -u -r --new-file runtime/syntax.orig runtime/syntax | gzip -9c > $CWD/vim-runtime-syntax-$(date +%Y%m%d).diff.gz
  rm -rf runtime/syntax
  mv runtime/syntax.orig runtime/syntax
fi

# Apply the syntax update:
zcat $CWD/vim-runtime-syntax-*.diff.gz | patch -p0 --verbose || exit 1

chown -R root:root .
find . \
  \( -perm 777 -o -perm 775 -o -perm 711 -o -perm 555 -o -perm 511 \) \
  -exec chmod 755 {} \; -o \
  \( -perm 666 -o -perm 664 -o -perm 600 -o -perm 444 -o -perm 440 -o -perm 400 \) \
  -exec chmod 644 {} \;
for file in $CWD/patches/* ; do
  ( zcat $file 2> /dev/null | patch -p0 --verbose --batch )
done

config_vim --without-x --disable-gui
make $NUMJOBS || make || exit 1
make install DESTDIR=$PKG || exit 1

rsync -lprvt $PKG/usr/share/man/ $PKG/usr/man/
rm -r $PKG/usr/share/man

cp -a runtime/vimrc_example.vim runtime/vimrc.new

# Don't make backups in /var/spool/cron/*, which fixes "crontab -e":
zcat $CWD/vim.vimrc.diff.gz | patch -p1 --verbose || exit 1

# Add patched vimrc to the package:
cat runtime/vimrc.new > $PKG/usr/share/vim/vimrc.new

# Fix manpage symlinks:
if [ -d $PKG/usr/man ]; then
  ( cd $PKG/usr/man
    for manpagedir in $(find . -type d -name "man*") ; do
      ( cd $manpagedir
        for eachpage in $( find . -type l -maxdepth 1) ; do
          ln -s $( readlink $eachpage ).gz $eachpage.gz
          rm $eachpage
        done
        gzip -9 *.?
      )
    done
  )
fi

# Legacy binary links:
( cd $PKG/usr/bin ; rm -rf ex )
( cd $PKG/usr/bin ; ln -sf vim ex )
( cd $PKG/usr/bin ; rm -rf rview )
( cd $PKG/usr/bin ; ln -sf vim rview )
( cd $PKG/usr/bin ; rm -rf rvim )
( cd $PKG/usr/bin ; ln -sf vim rvim )
( cd $PKG/usr/bin ; rm -rf view )
( cd $PKG/usr/bin ; ln -sf vim view )
( cd $PKG/usr/bin ; rm -rf eview )
( cd $PKG/usr/bin ; ln -sf vim eview )
( cd $PKG/usr/bin ; rm -rf evim )
( cd $PKG/usr/bin ; ln -sf vim evim )

mkdir -p $PKG/usr/doc/vim-$VIMVER.$PATCHLEVEL
cp -a README.txt $PKG/usr/doc/vim-$VIMVER.$PATCHLEVEL
find $PKG/usr/doc/vim-$VIMVER.$PATCHLEVEL -type f | xargs chmod 644
( cd $PKG/usr/doc/vim-$VIMVER.$PATCHLEVEL ; rm -rf doc )
( cd $PKG/usr/doc/vim-$VIMVER.$PATCHLEVEL ; ln -sf /usr/share/vim/vim$DIRVER doc )

mkdir -p $PKG/install
cat $CWD/slack-desc.vim > $PKG/install/slack-desc
cat << EOF > $PKG/install/doinst.sh
#!/bin/sh
config() {
  NEW="\$1"
  OLD="\$(dirname \$NEW)/\$(basename \$NEW .new)"
  # If there's no config file by that name, mv it over:
  if [ ! -r \$OLD ]; then
    mv \$NEW \$OLD
  elif [ "\$(cat \$OLD | md5sum)" = "\$(cat \$NEW | md5sum)" ]; then # toss the redundant copy
    rm \$NEW
  fi
  # Otherwise, we leave the .new copy for the admin to consider...
}
config usr/share/vim/vimrc.new
EOF
zcat $CWD/doinst.sh.gz >> $PKG/install/doinst.sh

find $PKG | xargs file | grep -e "executable" -e "shared object" | grep ELF \
  | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null

cd $PKG
/sbin/makepkg -l y -c n $TMP/vim-$VIMVER.$PATCHLEVEL-$ARCH-$BUILD.txz

