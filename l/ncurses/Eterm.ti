# Eterm terminfo file

Eterm|Eterm Terminal Emulator (X11 Window System),
# FIXME:  xterm does not specify bce, bw, eo, or xon.  Should we?
	am, bw, bce, km, mir, msgr, xenl, xon, eo, mc5i,
	cols#80, lines#24, it#8, lm#0, btns#5,
	cr=\r, bel=^G,
	colors#8, pairs#64,

# Scroll text down/up one line
	ind=\n, ri=\eM,

# Clear entire screen (home, then clear to EOS), EOS, EOL, BOL
	clear=\e[H\e[2J, ed=\e[J, el=\e[K, el1=\e[1K,

# Change scrolling region to lines $1+1 to $2+1
# %i means add one to params 1 and 2; convert from 0-based to
# 1-based counting.
	csr=\e[%i%p1%d;%p2%dr,

# Move cursor to row $1+1, column $2+1.  Can end with H or f
	cup=\e[%i%p1%d;%p2%dH,
# Move cursor to column n, same row; or row n, same column
	hpa=\e[%i%p1%dG, vpa=\e[%i%p1%dd,
# Move cursor up/down/forward/back by n chars
	cuu=\e[%p1%dA, cud=\e[%p1%dB, cuf=\e[%p1%dC, cub=\e[%p1%dD,
# Move cursor up/down/forward/back by 1 char
	cuu1=\e[A,     cud1=\e[B,       cuf1=\e[C,     cub1=\b,
# Home cursor (row 1, col 1).  Was \e[1;1H but 1's are redundant
	home=\e[H,

# Enter/leave insert mode
	smir=\e[4h, rmir=\e[4l,

# Set tab stops, clear tab stops, tab character
	hts=\eH, tbc=\e[3g, ht=\t,

# Turn on/off auto margins
	smam=\e[?7h, rmam=\e[?7l,
# Make cursor invisible, normal  (bold cursor cvvis not supported)
	civis=\e[?25l, cnorm=\e[?25h,
# Save/restore cursor position
	sc=\e7, rc=\e8,

# Alternate character set (line drawing), enable/enter/exit ACS
	acsc=``aaffggjjkkllmmnnooppqqrrssttuuvvwwxxyyzz{{||}}~~,
# The line below is used by some vtXXX emulators, but I don't think it's right for us.
#	acsc=+\020\,\021-\030.^Y0\333`\004a\261f\370g\361h\260i\316j\331k\277l\332m\300n\305o~p\304q\304r\304s_t\303u\264v\301w\302x\263y\363z\362{\343|\330}\234~\376,
	enacs=\e)0, smacs=^N, rmacs=^O,

# Delete/insert n chars, 1 char
	dch=\e[%p1%dP, ich=\e[%p1%d@, dch1=\e[P, ich1=\e[@,
# Delete/insert n lines, 1 line
	dl=\e[%p1%dM, il=\e[%p1%dL, dl1=\e[M, il1=\e[L,
# Erase next n chars
	ech=\e[%p1%dX,

# Activate SGR mode:  bold, reverse video, blink (bright bg color)
	bold=\e[1m, rev=\e[7m, blink=\e[5m,
# Start/stop underline, standout (reverse video)
	smul=\e[4m, rmul=\e[24m, smso=\e[7m, rmso=\e[27m,
# Turn off all attributes (exit_attribute_mode)
	sgr0=\e[m^O,
# Flash the screen (sets and resets reverse video for the whole screen)
	flash=\e[?5h\e[?5l,

# Enter/leave application keypad mode.  We always send the ANSI values
# because that seems to be the most portable solution.  The valid escape
# sequences are here but are commented out for this reason. The 1st set
# is for keypad cursor keys, the second is for application cursor key
# mode.  The third is what gets sent by default.
##	smkx=\e=, rmkx=\e>,
	smkx=, rmkx=,
##	kcuu1=\e[Ox, kcud1=\e[Or, kcuf1=\e[Ov, kcub1=\e[Ot,
##	kcuu1=\eOA, kcud1=\eOB, kcuf1=\eOC, kcub1=\eOD,
	kcuu1=\e[A, kcud1=\e[B, kcuf1=\e[C, kcub1=\e[D,

# Keypad 7, 9, 5, 1, and 3.  The 1st set are the appl. keypad mode
# sequences.  The 2nd set are the values for Home/End/PgUp/PgDn.
# The 5 key is the same either way.
##	ka1=\eOw, ka3=\eOy, kb2=\eOu, kc1=\eOq, kc3=\eOs,
	ka1=\e[7~, ka3=\e[5~, kb2=\eOu, kc1=\e[8~, kc3=\e[6~,

# Function keys
	kf1=\e[11~, kf2=\e[12~, kf3=\e[13~, kf4=\e[14~, kf5=\e[15~,
	kf6=\e[17~, kf7=\e[18~, kf8=\e[19~, kf9=\e[20~, kf10=\e[21~,
	kf11=\e[23~, kf12=\e[24~, kf13=\e[25~, kf14=\e[26~, kf15=\e[28~,
	kf16=\e[29~, kf17=\e[31~, kf18=\e[32~, kf19=\e[33~, kf20=\e[34~,

# Find, Insert, Delete, Select, Prior (PgUp), Next (PgDn).  The first set of
# sequences are accurate.  The second set lets Find/Select act like Home/End.
	kfnd=\e[1~, kich1=\e[2~, kdch1=\e[3~, kslt=\e[4~, kpp=\e[5~, knp=\e[6~,
##	kfnd=\e[7~, kich1=\e[2~, kdch1=\e[3~, kslt=\e[8~, kpp=\e[5~, knp=\e[6~,

# Home (vt100 may use khome=\e[H), End, Backspace, Keypad Enter, Shift-Tab
# The 1st set is the default.  The 2nd set is based on Linux console/vt220
# settings for Home/End and Backspace sending Delete (^?).  The 3rd set gives
# xterm's settings for Home/End.
	khome=\e[7~, kend=\e[8~, kbs=\010, kent=\eOM, kcbt=\e[Z,
##	khome=\e[1~, kend=\e[4~, kbs=\177, kent=\eOM, kcbt=\e[Z,
##	khome=\e[H, kend=\e[F, kbs=\010, kent=\eOM, kcbt=\e[Z,

# Help and Begin keys
	khlp=\e[28~, kbeg=\eOu,
# "Shifted" right and left (actually Ctrl, not Shift)
	kRIT=\e[c, kLFT=\e[d,
# Shift-Prior/Next (PgUp/PgDn).  Usually, these key combos scroll.
	kPRV=\e[5$, kNXT=\e[6$,
# Shift-Delete/Home/End and Ctrl-End.  It's a $ instead of a ~ for
# Shift-, a ^ for Ctrl-, and @ for Ctrl-Shift-.
	kDC=\e[3$, kHOM=\e[7$, kEND=\e[8$, kel=\e[8\^,

# Reset terminal, turn off all attributes
	rs1=\e>\e[1;3;4;5;6l\e[?7h\e[m\e[r\e[2J\e[H,
	rs2=\e[r\e[m\e[2J\e[H\e[?7h\e[?1;3;4;6l\e[4l\e>,
# Init terminal
	is1=\e[?47l\e>\e[?1l,
	is2=\e[r\e[m\e[2J\e[H\e[?7h\e[?1;3;4;6l\e[4l,

# Enter/leave cursor address mode.  The 1st set uses the
# secondary screen.  The 2nd one doesn't.
	smcup=\e7\e[?47h, rmcup=\e[2J\e[?47l\e8,
##	smcup=\e7, rmcup=\e8,

# Start/stop redirection to the printpipe
	mc4=\e[4i, mc5=\e[5i,

# User-defined string capabilities
# Cursor Position Report (CPR)
	u6=\e[%i%d;%dR,
# Report current screen position (DSR 6) (replies with u6)
	u7=\e[6n,
# vt100 answerback
	u8=\e[?1;2c,
# Request identity (replies with u8)  If VT100_ANS is enabled, use
# the first value.  If ENQ_ANS is enabled, use the second value.
	u9=\e[c,
##	u9=^E,

# Add ANSI color support
 	sgr=\e[0%?%p1%p6%|%t;1%;%?%p2%t;4%;%?%p1%p3%|%t;7%;%?%p4%t;5%;m%?%p9%t^N%e^O%;,
##	sgr=\e[%?%p1%t;7%;%?%p2%t;4%;%?%p3%t;7%;%?%p4%t;5%;%?%p6%t;1%;m,

# Mouse info packet introducer
	kmous=\e[M,

# Revert to the original foreground/background pair
	op=\e[39;49m,
# Set foreground color, background color
	setaf=\e[3%p1%dm, setab=\e[4%p1%dm,
